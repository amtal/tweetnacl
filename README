
# Versioning - WARNING EXPERIMENTAL CODE

API and codebase in flux while in v0.0.X, wear helmet while using, do not
operate drunk.


# Other NaCl/libsodium Bindings

Comparing this binding to other projects, the major difference is binding to
tweetnacl rather than libsodium/original NaCl. Other implementation
differences:

- https://github.com/tonyg/erlang-nacl
    - Doesn't have all interesting primitives. I want symmetric + private +
      simple one time auth API.
    - Don't care about underlying primitives, will look at benchmarks before
      deciding on beforenm/afternm.
- https://github.com/freza/salt
    - This one has very clean-looking code. Matches my original approach of
      by-the-book C, but finishes the job and publishes it first :)
    - As with tweetnacl vs libsodium, difference is in weight. I'll see how
      close I come to 1.4K lines of C depending on features and many macros I
      can justify using.

Don't think anyone's using PropEr tests, but given the domain that hardly
matters :)

Oh yes. The original goal was also to look at applying Erlang API design to the
problem of developer meets crypto code. This implementation may get creative
with failure modes and naming schemes. (One man project, so no bike shedding.)

